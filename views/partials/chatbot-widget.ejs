<!-- Chatbot Integration for Langflow -->
<!-- This will initialize the chatbot for the "product-recommender" profile -->

<!-- Container for potential embedded mode. -->
<!-- The plugin will use this if the "product-recommender" profile configuration indicates embedded mode. -->
<!-- If the profile indicates floating mode, the plugin should manage its own UI and might hide/ignore this container. -->
<div id="langflow-chatbot-container" style="height: 500px; max-width: 450px; border: 1px solid #eee; margin-top: 20px; overflow: hidden; display: block;">
    <!-- Chatbot will be rendered here if embedded and profile config directs it -->
</div>

<%# Load CSS for the langflow-chatbot plugin %>
<link rel="stylesheet" href="/static/langflow-chatbot.css">
    
<%# Load JavaScript for the langflow-chatbot plugin %>
<script src="/static/LangflowChatbotPlugin.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', async () => {
        const proxyApiBasePath = '<%= langflowProxyApiBasePath %>';
        const chatbotProfileId = "product-recommender"; 

        if (window.LangflowChatbotPlugin && typeof window.LangflowChatbotPlugin.init === 'function') {
            try {
                const pluginInitOptions = {
                    profileId: chatbotProfileId,
                    proxyApiBasePath: proxyApiBasePath,
                    containerId: 'langflow-chatbot-container'
                };

                console.log(`Initializing LangflowChatbotPlugin for profile '${chatbotProfileId}' with options:`, pluginInitOptions);
                const chatbotInstance = await window.LangflowChatbotPlugin.init(pluginInitOptions);
                console.log(`LangflowChatbotPlugin for profile '${chatbotProfileId}' initialized successfully.`, chatbotInstance);

                // Optional: Event listeners
                // if (chatbotInstance && typeof chatbotInstance.on === 'function') {
                //   chatbotInstance.on('sessionChanged', (newSessionId) => {
                //     console.log('Chatbot (EJS) for "product-recommender": sessionChanged:', newSessionId);
                //   });
                // }

            } catch (error) {
                console.error(`Error initializing LangflowChatbotPlugin for profile '${chatbotProfileId}':`, error);
                const errorDisplayContainer = document.getElementById('langflow-chatbot-container');
                if (errorDisplayContainer) {
                    errorDisplayContainer.innerHTML = `<p style="color: red; padding: 10px;">Failed to load chatbot ('${chatbotProfileId}'): ${error.message || String(error)}</p>`;
                    errorDisplayContainer.style.display = 'block'; // Ensure error is visible
                }
                // else { alert(`Failed to initialize chatbot ('${desiredProfileId}'): ${error.message || String(error)}`); }
            }
        } else {
            console.error("LangflowChatbotPlugin.init not found. Ensure plugin script is loaded before this script runs.");
            const container = document.getElementById('langflow-chatbot-container');
            if (container) {
                container.innerHTML = '<p style="color: red; padding: 10px;">Chatbot plugin core not loaded.</p>';
                container.style.display = 'block'; // Ensure error is visible
            }
            // else { alert("Critical Error: Chatbot plugin core not loaded!"); }
        }
    });
</script>